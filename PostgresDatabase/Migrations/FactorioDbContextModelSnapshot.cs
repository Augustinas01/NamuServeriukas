// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PostgresDatabase.Contexts;

#nullable disable

namespace PostgresDatabase.Migrations
{
    [DbContext(typeof(FactorioDbContext))]
    partial class FactorioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Generic.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("StopTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("session_pkey");

                    b.ToTable("session", "main");

                    b.HasDiscriminator<string>("Type").HasValue("session_base");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Generic.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("JoinTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LeaveTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("SessionId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("player_pkey");

                    b.HasIndex("SessionId");

                    b.ToTable("player", "main");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Player");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Factorio.FactorioSession", b =>
                {
                    b.HasBaseType("Domain.Entities.Generic.GameSession");

                    b.HasDiscriminator().HasValue("factorio");
                });

            modelBuilder.Entity("Domain.Entities.Factorio.FactorioPlayer", b =>
                {
                    b.HasBaseType("Domain.Entities.Generic.Player");

                    b.HasDiscriminator().HasValue("FactorioPlayer");
                });

            modelBuilder.Entity("Domain.Entities.Generic.Player", b =>
                {
                    b.HasOne("Domain.Entities.Generic.GameSession", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId");

                    b.Navigation("Session");
                });
#pragma warning restore 612, 618
        }
    }
}
